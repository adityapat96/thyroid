{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "gpuClass": "standard"
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qF7tFbdwS7ME",
        "outputId": "f7238559-5500-4f26-85e6-d5e0b949070b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import datetime\n",
        "import os\n",
        "import collections\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "from collections import Counter\n",
        "from matplotlib import pyplot as plt\n",
        "from mlxtend.plotting import plot_confusion_matrix\n",
        "from sklearn.datasets import make_classification\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.ensemble import GradientBoostingClassifier\n",
        "from sklearn import metrics\n",
        "from sklearn.metrics import (accuracy_score, auc, classification_report,\n",
        "                             confusion_matrix, f1_score, precision_recall_curve,\n",
        "                             precision_score, recall_score, roc_auc_score,\n",
        "                             roc_curve)\n",
        "from sklearn.metrics import confusion_matrix\n",
        "from sklearn.model_selection import (cross_validate, train_test_split)\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.preprocessing import OneHotEncoder, StandardScaler\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.utils import shuffle\n",
        "from sklearn.model_selection import KFold\n",
        "\n",
        "\n",
        "import keras\n",
        "from keras.callbacks import TensorBoard\n",
        "from keras.layers import Dense, Dropout\n",
        "from keras.models import Sequential\n",
        "from keras.optimizers import Adam\n",
        "\n",
        "from keras.utils.vis_utils import plot_model\n",
        "\n",
        "from imblearn.over_sampling import RandomOverSampler\n",
        "from imblearn.under_sampling import RandomUnderSampler"
      ],
      "metadata": {
        "id": "ImyGQgkiTChd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##reading the csv file\n",
        "\n",
        "dataset_file = \"/content/drive/MyDrive/506/Final Project/thyroid.csv\"\n",
        "df = pd.read_csv(dataset_file)\n",
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AKSGENRATFwR",
        "outputId": "2891d836-e15b-4eab-9d58-a7685b02c16f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(9172, 31)"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pd.set_option('display.max_columns', None)\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "i2V5z49-TLFM",
        "outputId": "83cb2012-2c13-439b-bf3a-75e2b5179c43"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      age sex on_thyroxine query_on_thyroxine on_antithyroid_meds sick  \\\n",
              "0      29   F            f                  f                   f    f   \n",
              "1      29   F            f                  f                   f    f   \n",
              "2      41   F            f                  f                   f    f   \n",
              "3      36   F            f                  f                   f    f   \n",
              "4      32   F            f                  f                   f    f   \n",
              "...   ...  ..          ...                ...                 ...  ...   \n",
              "9167   56   M            f                  f                   f    f   \n",
              "9168   22   M            f                  f                   f    f   \n",
              "9169   69   M            f                  f                   f    f   \n",
              "9170   47   F            f                  f                   f    f   \n",
              "9171   31   M            f                  f                   f    f   \n",
              "\n",
              "     pregnant thyroid_surgery I131_treatment query_hypothyroid  \\\n",
              "0           f               f              f                 t   \n",
              "1           f               f              f                 f   \n",
              "2           f               f              f                 f   \n",
              "3           f               f              f                 f   \n",
              "4           f               f              f                 f   \n",
              "...       ...             ...            ...               ...   \n",
              "9167        f               f              f                 f   \n",
              "9168        f               f              f                 f   \n",
              "9169        f               f              f                 f   \n",
              "9170        f               f              f                 f   \n",
              "9171        f               f              f                 t   \n",
              "\n",
              "     query_hyperthyroid lithium goitre tumor hypopituitary psych TSH_measured  \\\n",
              "0                     f       f      f     f             f     f            t   \n",
              "1                     f       f      f     f             f     f            t   \n",
              "2                     t       f      f     f             f     f            f   \n",
              "3                     f       f      f     f             f     f            f   \n",
              "4                     f       f      f     f             f     f            f   \n",
              "...                 ...     ...    ...   ...           ...   ...          ...   \n",
              "9167                  t       f      f     f             f     f            f   \n",
              "9168                  f       f      f     f             f     f            f   \n",
              "9169                  f       f      f     f             f     f            f   \n",
              "9170                  f       f      f     f             f     f            f   \n",
              "9171                  f       f      f     f             f     f            f   \n",
              "\n",
              "      TSH T3_measured   T3 TT4_measured    TT4 T4U_measured   T4U  \\\n",
              "0     0.3           f  NaN            f    NaN            f   NaN   \n",
              "1     1.6           t  1.9            t  128.0            f   NaN   \n",
              "2     NaN           f  NaN            f    NaN            f   NaN   \n",
              "3     NaN           f  NaN            f    NaN            f   NaN   \n",
              "4     NaN           f  NaN            f    NaN            f   NaN   \n",
              "...   ...         ...  ...          ...    ...          ...   ...   \n",
              "9167  NaN           f  NaN            t   64.0            t  0.83   \n",
              "9168  NaN           f  NaN            t   91.0            t  0.92   \n",
              "9169  NaN           f  NaN            t  113.0            t  1.27   \n",
              "9170  NaN           f  NaN            t   75.0            t  0.85   \n",
              "9171  NaN           f  NaN            t   66.0            t  1.02   \n",
              "\n",
              "     FTI_measured   FTI TBG_measured   TBG referral_source target  patient_id  \n",
              "0               f   NaN            f   NaN           other      -   840801013  \n",
              "1               f   NaN            f   NaN           other      -   840801014  \n",
              "2               f   NaN            t  11.0           other      -   840801042  \n",
              "3               f   NaN            t  26.0           other      -   840803046  \n",
              "4               f   NaN            t  36.0           other      S   840803047  \n",
              "...           ...   ...          ...   ...             ...    ...         ...  \n",
              "9167            t  77.0            f   NaN             SVI      -   870119022  \n",
              "9168            t  99.0            f   NaN             SVI      -   870119023  \n",
              "9169            t  89.0            f   NaN             SVI      I   870119025  \n",
              "9170            t  88.0            f   NaN           other      -   870119027  \n",
              "9171            t  65.0            f   NaN           other      -   870119035  \n",
              "\n",
              "[9172 rows x 31 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5a4a5191-11d7-42e1-950e-b243b0930c80\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>sex</th>\n",
              "      <th>on_thyroxine</th>\n",
              "      <th>query_on_thyroxine</th>\n",
              "      <th>on_antithyroid_meds</th>\n",
              "      <th>sick</th>\n",
              "      <th>pregnant</th>\n",
              "      <th>thyroid_surgery</th>\n",
              "      <th>I131_treatment</th>\n",
              "      <th>query_hypothyroid</th>\n",
              "      <th>query_hyperthyroid</th>\n",
              "      <th>lithium</th>\n",
              "      <th>goitre</th>\n",
              "      <th>tumor</th>\n",
              "      <th>hypopituitary</th>\n",
              "      <th>psych</th>\n",
              "      <th>TSH_measured</th>\n",
              "      <th>TSH</th>\n",
              "      <th>T3_measured</th>\n",
              "      <th>T3</th>\n",
              "      <th>TT4_measured</th>\n",
              "      <th>TT4</th>\n",
              "      <th>T4U_measured</th>\n",
              "      <th>T4U</th>\n",
              "      <th>FTI_measured</th>\n",
              "      <th>FTI</th>\n",
              "      <th>TBG_measured</th>\n",
              "      <th>TBG</th>\n",
              "      <th>referral_source</th>\n",
              "      <th>target</th>\n",
              "      <th>patient_id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>29</td>\n",
              "      <td>F</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>t</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>t</td>\n",
              "      <td>0.3</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>other</td>\n",
              "      <td>-</td>\n",
              "      <td>840801013</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>29</td>\n",
              "      <td>F</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>t</td>\n",
              "      <td>1.6</td>\n",
              "      <td>t</td>\n",
              "      <td>1.9</td>\n",
              "      <td>t</td>\n",
              "      <td>128.0</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>other</td>\n",
              "      <td>-</td>\n",
              "      <td>840801014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>41</td>\n",
              "      <td>F</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>t</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>t</td>\n",
              "      <td>11.0</td>\n",
              "      <td>other</td>\n",
              "      <td>-</td>\n",
              "      <td>840801042</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>36</td>\n",
              "      <td>F</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>t</td>\n",
              "      <td>26.0</td>\n",
              "      <td>other</td>\n",
              "      <td>-</td>\n",
              "      <td>840803046</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>32</td>\n",
              "      <td>F</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>t</td>\n",
              "      <td>36.0</td>\n",
              "      <td>other</td>\n",
              "      <td>S</td>\n",
              "      <td>840803047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9167</th>\n",
              "      <td>56</td>\n",
              "      <td>M</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>t</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>t</td>\n",
              "      <td>64.0</td>\n",
              "      <td>t</td>\n",
              "      <td>0.83</td>\n",
              "      <td>t</td>\n",
              "      <td>77.0</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SVI</td>\n",
              "      <td>-</td>\n",
              "      <td>870119022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9168</th>\n",
              "      <td>22</td>\n",
              "      <td>M</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>t</td>\n",
              "      <td>91.0</td>\n",
              "      <td>t</td>\n",
              "      <td>0.92</td>\n",
              "      <td>t</td>\n",
              "      <td>99.0</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SVI</td>\n",
              "      <td>-</td>\n",
              "      <td>870119023</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9169</th>\n",
              "      <td>69</td>\n",
              "      <td>M</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>t</td>\n",
              "      <td>113.0</td>\n",
              "      <td>t</td>\n",
              "      <td>1.27</td>\n",
              "      <td>t</td>\n",
              "      <td>89.0</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SVI</td>\n",
              "      <td>I</td>\n",
              "      <td>870119025</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9170</th>\n",
              "      <td>47</td>\n",
              "      <td>F</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>t</td>\n",
              "      <td>75.0</td>\n",
              "      <td>t</td>\n",
              "      <td>0.85</td>\n",
              "      <td>t</td>\n",
              "      <td>88.0</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>other</td>\n",
              "      <td>-</td>\n",
              "      <td>870119027</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9171</th>\n",
              "      <td>31</td>\n",
              "      <td>M</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>t</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>t</td>\n",
              "      <td>66.0</td>\n",
              "      <td>t</td>\n",
              "      <td>1.02</td>\n",
              "      <td>t</td>\n",
              "      <td>65.0</td>\n",
              "      <td>f</td>\n",
              "      <td>NaN</td>\n",
              "      <td>other</td>\n",
              "      <td>-</td>\n",
              "      <td>870119035</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9172 rows × 31 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a4a5191-11d7-42e1-950e-b243b0930c80')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5a4a5191-11d7-42e1-950e-b243b0930c80 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5a4a5191-11d7-42e1-950e-b243b0930c80');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c8ZJxyJVTUdg",
        "outputId": "a34cbd58-1781-45fc-f88f-a9703dc73877"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['age', 'sex', 'on_thyroxine', 'query_on_thyroxine',\n",
              "       'on_antithyroid_meds', 'sick', 'pregnant', 'thyroid_surgery',\n",
              "       'I131_treatment', 'query_hypothyroid', 'query_hyperthyroid', 'lithium',\n",
              "       'goitre', 'tumor', 'hypopituitary', 'psych', 'TSH_measured', 'TSH',\n",
              "       'T3_measured', 'T3', 'TT4_measured', 'TT4', 'T4U_measured', 'T4U',\n",
              "       'FTI_measured', 'FTI', 'TBG_measured', 'TBG', 'referral_source',\n",
              "       'target', 'patient_id'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hsWA6n-YTWtx",
        "outputId": "69d42aac-6510-4221-d928-0fcb9d1c34d7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "age                      int64\n",
              "sex                     object\n",
              "on_thyroxine            object\n",
              "query_on_thyroxine      object\n",
              "on_antithyroid_meds     object\n",
              "sick                    object\n",
              "pregnant                object\n",
              "thyroid_surgery         object\n",
              "I131_treatment          object\n",
              "query_hypothyroid       object\n",
              "query_hyperthyroid      object\n",
              "lithium                 object\n",
              "goitre                  object\n",
              "tumor                   object\n",
              "hypopituitary           object\n",
              "psych                   object\n",
              "TSH_measured            object\n",
              "TSH                    float64\n",
              "T3_measured             object\n",
              "T3                     float64\n",
              "TT4_measured            object\n",
              "TT4                    float64\n",
              "T4U_measured            object\n",
              "T4U                    float64\n",
              "FTI_measured            object\n",
              "FTI                    float64\n",
              "TBG_measured            object\n",
              "TBG                    float64\n",
              "referral_source         object\n",
              "target                  object\n",
              "patient_id               int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##encoding columns, changing the datatypes, and cleaning the data\n",
        "\n",
        "df['sex'] = df['sex'].map({'M': 0, 'F': 1})\n",
        "df['sex'] = df['sex'].fillna(-1)\n",
        "df['sex'] = df['sex'].astype(int)\n",
        "\n",
        "df['on_thyroxine'] = df['on_thyroxine'].map({'t': 1, 'f': 0})\n",
        "df['query_on_thyroxine'] = df['query_on_thyroxine'].map({'t': 1, 'f': 0})\n",
        "df['on_antithyroid_meds'] = df['on_antithyroid_meds'].map({'t': 1, 'f': 0})\n",
        "df['sick'] = df['sick'].map({'t': 1, 'f': 0})\n",
        "df['pregnant'] = df['pregnant'].map({'t': 1, 'f': 0})\n",
        "df['thyroid_surgery'] = df['thyroid_surgery'].map({'t': 1, 'f': 0})\n",
        "df['I131_treatment'] = df['I131_treatment'].map({'t': 1, 'f': 0})\n",
        "df['query_hypothyroid'] = df['query_hypothyroid'].map({'t': 1, 'f': 0})\n",
        "df['query_hyperthyroid'] = df['query_hyperthyroid'].map({'t': 1, 'f': 0})\n",
        "df['lithium'] = df['lithium'].map({'t': 1, 'f': 0})\n",
        "df['goitre'] = df['goitre'].map({'t': 1, 'f': 0})\n",
        "df['tumor'] = df['tumor'].map({'t': 1, 'f': 0})\n",
        "df['hypopituitary'] = df['hypopituitary'].map({'t': 1, 'f': 0})\n",
        "df['psych'] = df['psych'].map({'t': 1, 'f': 0})\n",
        "df['TSH_measured'] = df['TSH_measured'].map({'t': 1, 'f': 0})\n",
        "df['T3_measured'] = df['T3_measured'].map({'t': 1, 'f': 0})\n",
        "df['TT4_measured'] = df['TT4_measured'].map({'t': 1, 'f': 0})\n",
        "df['T4U_measured'] = df['T4U_measured'].map({'t': 1, 'f': 0})\n",
        "df['FTI_measured'] = df['FTI_measured'].map({'t': 1, 'f': 0})\n",
        "df['TBG_measured'] = df['TBG_measured'].map({'t': 1, 'f': 0})\n",
        "\n",
        "df = df.astype({'on_thyroxine': 'int',\n",
        "                'query_on_thyroxine': 'int',\n",
        "                'on_antithyroid_meds': 'int',\n",
        "                'sick': 'int',\n",
        "                'pregnant': 'int',\n",
        "                'thyroid_surgery': 'int',\n",
        "                'I131_treatment': 'int',\n",
        "                'query_hypothyroid': 'int',\n",
        "                'query_hyperthyroid': 'int',\n",
        "                'lithium': 'int',\n",
        "                'goitre': 'int',\n",
        "                'tumor': 'int',\n",
        "                'hypopituitary': 'int',\n",
        "                'psych': 'int',\n",
        "                'TSH_measured': 'int',\n",
        "                'T3_measured': 'int',\n",
        "                'TT4_measured': 'int',\n",
        "                'T4U_measured': 'int',\n",
        "                'FTI_measured': 'int',\n",
        "                'TBG_measured': 'int'})\n",
        "\n",
        "df['TSH'] = df['TSH'].fillna(0)\n",
        "df['T3'] = df['T3'].fillna(0)\n",
        "df['TT4'] = df['TT4'].fillna(0)\n",
        "df['T4U'] = df['T4U'].fillna(0)\n",
        "df['FTI'] = df['FTI'].fillna(0)\n",
        "df['TBG'] = df['TBG'].fillna(0)\n",
        "\n",
        "df = df.drop(df[df['age'] < 18].index)\n",
        "df = df.drop(df[df['age'] > 98].index)\n",
        "df = df.drop(df[df['sex'] == -1].index)"
      ],
      "metadata": {
        "id": "HXrQcj9hTZ5v"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##dropping columns that are not required\n",
        "\n",
        "df.drop(['referral_source', 'patient_id', 'T4U', 'T4U_measured'], axis = 1, inplace = True)"
      ],
      "metadata": {
        "id": "AGL87MEuTjb7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##cleaning the target column\n",
        "\n",
        "df['target'] = df['target'].str.replace('|', '')\n",
        "\n",
        "diagnosis_map = {\n",
        "    'A': 'hyperthyroid',\n",
        "    'B': 'T3 toxic',\n",
        "    'C': 'toxic goitre',\n",
        "    'D': 'secondary toxic',\n",
        "    'E': 'hypothyroid',\n",
        "    'F': 'primary hypothyroid',\n",
        "    'G': 'compensated hypothyroid',\n",
        "    '': 'none'\n",
        "}\n",
        "\n",
        "df['target'].replace(['-', \n",
        "                      'R', \n",
        "                      'I', \n",
        "                      'N', \n",
        "                      'L', \n",
        "                      'M', \n",
        "                      'S', \n",
        "                      'MK', \n",
        "                      'K', \n",
        "                      'T3 toxic', \n",
        "                      'AK', \n",
        "                      'O', \n",
        "                      'GK', \n",
        "                      'GI', \n",
        "                      'KJ', \n",
        "                      'CI', \n",
        "                      'J', \n",
        "                      'P', \n",
        "                      'HK', \n",
        "                      'secondary toxic', \n",
        "                      'FK', \n",
        "                      'hypothyroid', \n",
        "                      'LJ', \n",
        "                      'MI', \n",
        "                      'DR', \n",
        "                      'GKJ', \n",
        "                      'OI', \n",
        "                      'Q'], 'none', inplace=True)\n",
        "\n",
        "df['diagnosis_name'] = df['target'].replace(diagnosis_map)"
      ],
      "metadata": {
        "id": "WetKbIfmTp0W",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0db861cf-5b08-486c-f7c4-1dff150bb360"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-9-8daa3b2852a7>:3: FutureWarning: The default value of regex will change from True to False in a future version. In addition, single character regular expressions will *not* be treated as literal strings when regex=True.\n",
            "  df['target'] = df['target'].str.replace('|', '')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##dividing each age group\n",
        "\n",
        "df.loc[df['age'].between(18,29), 'age_group'] = 1\n",
        "df.loc[df['age'].between(30,39), 'age_group'] = 2\n",
        "df.loc[df['age'].between(40,49), 'age_group'] = 3\n",
        "df.loc[df['age'].between(50,59), 'age_group'] = 4\n",
        "df.loc[df['age'].between(60,69), 'age_group'] = 5\n",
        "df.loc[df['age'].between(70,79), 'age_group'] = 6\n",
        "df.loc[df['age'].between(80,89), 'age_group'] = 7\n",
        "df.loc[df['age'].between(90,99), 'age_group'] = 8"
      ],
      "metadata": {
        "id": "f-Mb-csXTukx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "XOERQOK3QC92"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.sort_values(by = 'age', ascending = True)"
      ],
      "metadata": {
        "id": "qMG4NQ7iTxo-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_order = ['age_group', \n",
        "             'age', \n",
        "             'sex', \n",
        "             'on_thyroxine', \n",
        "             'query_on_thyroxine', \n",
        "             'on_antithyroid_meds', \n",
        "             'sick', 'pregnant', \n",
        "             'thyroid_surgery', \n",
        "             'I131_treatment', \n",
        "             'query_hypothyroid', \n",
        "             'query_hyperthyroid', \n",
        "             'lithium', \n",
        "             'goitre', \n",
        "             'tumor', \n",
        "             'hypopituitary', \n",
        "             'psych', \n",
        "             'TSH_measured', \n",
        "             'TSH',\n",
        "             'T3_measured', \n",
        "             'T3', \n",
        "             'TT4_measured', \n",
        "             'TT4', \n",
        "             'FTI_measured', \n",
        "             'FTI', \n",
        "             'TBG_measured', \n",
        "             'TBG', \n",
        "             'diagnosis_name']\n",
        "df = df.reindex(columns=new_order)\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "7O6nEWFVTy0H",
        "outputId": "70f02dc9-8326-48c3-b3f2-d4d7d20fb594"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      age_group  age  sex  on_thyroxine  query_on_thyroxine  \\\n",
              "1288        1.0   18    0             1                   0   \n",
              "1031        1.0   18    1             0                   0   \n",
              "8545        1.0   18    0             1                   0   \n",
              "2778        1.0   18    0             0                   0   \n",
              "3042        1.0   18    1             0                   0   \n",
              "...         ...  ...  ...           ...                 ...   \n",
              "8968        8.0   95    1             0                   0   \n",
              "8155        8.0   95    0             0                   0   \n",
              "790         8.0   97    1             0                   0   \n",
              "7355        8.0   97    1             0                   0   \n",
              "7356        8.0   97    0             0                   0   \n",
              "\n",
              "      on_antithyroid_meds  sick  pregnant  thyroid_surgery  I131_treatment  \\\n",
              "1288                    0     0         0                0               0   \n",
              "1031                    0     0         0                0               0   \n",
              "8545                    0     0         0                0               0   \n",
              "2778                    0     0         0                0               0   \n",
              "3042                    0     0         0                0               0   \n",
              "...                   ...   ...       ...              ...             ...   \n",
              "8968                    0     0         0                0               0   \n",
              "8155                    0     0         0                0               0   \n",
              "790                     0     0         0                0               0   \n",
              "7355                    0     0         0                0               0   \n",
              "7356                    0     0         0                0               0   \n",
              "\n",
              "      query_hypothyroid  query_hyperthyroid  lithium  goitre  tumor  \\\n",
              "1288                  1                   0        0       0      0   \n",
              "1031                  1                   0        0       0      0   \n",
              "8545                  0                   0        0       0      0   \n",
              "2778                  0                   0        0       0      0   \n",
              "3042                  1                   0        0       0      0   \n",
              "...                 ...                 ...      ...     ...    ...   \n",
              "8968                  0                   0        0       0      0   \n",
              "8155                  0                   0        0       0      0   \n",
              "790                   0                   0        0       0      0   \n",
              "7355                  0                   0        0       0      0   \n",
              "7356                  0                   0        0       0      0   \n",
              "\n",
              "      hypopituitary  psych  TSH_measured   TSH  T3_measured   T3  \\\n",
              "1288              0      0             1  2.50            1  2.7   \n",
              "1031              0      0             1  0.25            1  2.5   \n",
              "8545              0      0             1  0.33            0  0.0   \n",
              "2778              0      0             0  0.00            1  2.4   \n",
              "3042              0      0             1  1.50            0  0.0   \n",
              "...             ...    ...           ...   ...          ...  ...   \n",
              "8968              0      0             1  1.60            0  0.0   \n",
              "8155              0      0             1  4.40            1  0.4   \n",
              "790               0      0             1  3.20            1  1.3   \n",
              "7355              0      0             1  2.90            1  0.5   \n",
              "7356              0      0             1  2.30            1  1.8   \n",
              "\n",
              "      TT4_measured    TT4  FTI_measured    FTI  TBG_measured   TBG  \\\n",
              "1288             1  131.0             1  149.0             0   0.0   \n",
              "1031             1  269.0             1  165.0             0   0.0   \n",
              "8545             1  154.0             1  179.0             0   0.0   \n",
              "2778             1   86.0             1   85.0             0   0.0   \n",
              "3042             1  116.0             1  111.0             0   0.0   \n",
              "...            ...    ...           ...    ...           ...   ...   \n",
              "8968             1   98.0             1  108.0             0   0.0   \n",
              "8155             1   54.0             1   87.0             0   0.0   \n",
              "790              1   84.0             1   87.0             0   0.0   \n",
              "7355             1  101.0             1  158.0             0   0.0   \n",
              "7356             1   93.0             1  104.0             1  29.0   \n",
              "\n",
              "     diagnosis_name  \n",
              "1288           none  \n",
              "1031           none  \n",
              "8545           none  \n",
              "2778           none  \n",
              "3042           none  \n",
              "...             ...  \n",
              "8968           none  \n",
              "8155           none  \n",
              "790            none  \n",
              "7355           none  \n",
              "7356           none  \n",
              "\n",
              "[8624 rows x 28 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-51339ada-a0e3-43c7-8f83-3c7cea6a2d95\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age_group</th>\n",
              "      <th>age</th>\n",
              "      <th>sex</th>\n",
              "      <th>on_thyroxine</th>\n",
              "      <th>query_on_thyroxine</th>\n",
              "      <th>on_antithyroid_meds</th>\n",
              "      <th>sick</th>\n",
              "      <th>pregnant</th>\n",
              "      <th>thyroid_surgery</th>\n",
              "      <th>I131_treatment</th>\n",
              "      <th>query_hypothyroid</th>\n",
              "      <th>query_hyperthyroid</th>\n",
              "      <th>lithium</th>\n",
              "      <th>goitre</th>\n",
              "      <th>tumor</th>\n",
              "      <th>hypopituitary</th>\n",
              "      <th>psych</th>\n",
              "      <th>TSH_measured</th>\n",
              "      <th>TSH</th>\n",
              "      <th>T3_measured</th>\n",
              "      <th>T3</th>\n",
              "      <th>TT4_measured</th>\n",
              "      <th>TT4</th>\n",
              "      <th>FTI_measured</th>\n",
              "      <th>FTI</th>\n",
              "      <th>TBG_measured</th>\n",
              "      <th>TBG</th>\n",
              "      <th>diagnosis_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1288</th>\n",
              "      <td>1.0</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2.50</td>\n",
              "      <td>1</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1</td>\n",
              "      <td>131.0</td>\n",
              "      <td>1</td>\n",
              "      <td>149.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>none</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1031</th>\n",
              "      <td>1.0</td>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.25</td>\n",
              "      <td>1</td>\n",
              "      <td>2.5</td>\n",
              "      <td>1</td>\n",
              "      <td>269.0</td>\n",
              "      <td>1</td>\n",
              "      <td>165.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>none</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8545</th>\n",
              "      <td>1.0</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.33</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>154.0</td>\n",
              "      <td>1</td>\n",
              "      <td>179.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>none</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2778</th>\n",
              "      <td>1.0</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1</td>\n",
              "      <td>2.4</td>\n",
              "      <td>1</td>\n",
              "      <td>86.0</td>\n",
              "      <td>1</td>\n",
              "      <td>85.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>none</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3042</th>\n",
              "      <td>1.0</td>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.50</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>116.0</td>\n",
              "      <td>1</td>\n",
              "      <td>111.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>none</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8968</th>\n",
              "      <td>8.0</td>\n",
              "      <td>95</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.60</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>98.0</td>\n",
              "      <td>1</td>\n",
              "      <td>108.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>none</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8155</th>\n",
              "      <td>8.0</td>\n",
              "      <td>95</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4.40</td>\n",
              "      <td>1</td>\n",
              "      <td>0.4</td>\n",
              "      <td>1</td>\n",
              "      <td>54.0</td>\n",
              "      <td>1</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>none</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>790</th>\n",
              "      <td>8.0</td>\n",
              "      <td>97</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3.20</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1</td>\n",
              "      <td>84.0</td>\n",
              "      <td>1</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>none</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7355</th>\n",
              "      <td>8.0</td>\n",
              "      <td>97</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2.90</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1</td>\n",
              "      <td>101.0</td>\n",
              "      <td>1</td>\n",
              "      <td>158.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>none</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7356</th>\n",
              "      <td>8.0</td>\n",
              "      <td>97</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2.30</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8</td>\n",
              "      <td>1</td>\n",
              "      <td>93.0</td>\n",
              "      <td>1</td>\n",
              "      <td>104.0</td>\n",
              "      <td>1</td>\n",
              "      <td>29.0</td>\n",
              "      <td>none</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8624 rows × 28 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-51339ada-a0e3-43c7-8f83-3c7cea6a2d95')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-51339ada-a0e3-43c7-8f83-3c7cea6a2d95 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-51339ada-a0e3-43c7-8f83-3c7cea6a2d95');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0_cL1C8HT0N7",
        "outputId": "9c8f66e6-81b8-4659-b415-c5c728b15f07"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "age_group              float64\n",
              "age                      int64\n",
              "sex                      int64\n",
              "on_thyroxine             int64\n",
              "query_on_thyroxine       int64\n",
              "on_antithyroid_meds      int64\n",
              "sick                     int64\n",
              "pregnant                 int64\n",
              "thyroid_surgery          int64\n",
              "I131_treatment           int64\n",
              "query_hypothyroid        int64\n",
              "query_hyperthyroid       int64\n",
              "lithium                  int64\n",
              "goitre                   int64\n",
              "tumor                    int64\n",
              "hypopituitary            int64\n",
              "psych                    int64\n",
              "TSH_measured             int64\n",
              "TSH                    float64\n",
              "T3_measured              int64\n",
              "T3                     float64\n",
              "TT4_measured             int64\n",
              "TT4                    float64\n",
              "FTI_measured             int64\n",
              "FTI                    float64\n",
              "TBG_measured             int64\n",
              "TBG                    float64\n",
              "diagnosis_name          object\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##average blood test measurements across all age groups\n",
        "\n",
        "df['avg_value'] = df[['TSH']].mean(axis = 1)\n",
        "\n",
        "TSH_df = df[['age_group', 'TSH']]\n",
        "\n",
        "grouped_df = TSH_df.groupby('age_group')['TSH'].mean().reset_index()\n",
        "\n",
        "plt.bar(TSH_df['age_group'], TSH_df['TSH'])\n",
        "plt.xlabel('Age Group')\n",
        "plt.ylabel('Average TSH Blood Test Measurement')\n",
        "plt.title('Scatter Plot of Average TSH Blood Test Measurement by Age Group')\n",
        "plt.show()\n",
        "\n",
        "\n",
        "df['avg_value'] = df[['T3']].mean(axis = 1)\n",
        "\n",
        "TSH_df = df[['age_group', 'T3']]\n",
        "\n",
        "grouped_df = TSH_df.groupby('age_group')['T3'].mean().reset_index()\n",
        "\n",
        "plt.bar(TSH_df['age_group'], TSH_df['T3'])\n",
        "plt.xlabel('Age Group')\n",
        "plt.ylabel('Average T3 Blood Test Measurement')\n",
        "plt.title('Scatter Plot of Average T3 Blood Test Measurement by Age Group')\n",
        "plt.show()\n",
        "\n",
        "\n",
        "df['avg_value'] = df[['TT4']].mean(axis = 1)\n",
        "\n",
        "TSH_df = df[['age_group', 'TT4']]\n",
        "\n",
        "grouped_df = TSH_df.groupby('age_group')['TT4'].mean().reset_index()\n",
        "\n",
        "plt.bar(TSH_df['age_group'], TSH_df['TT4'])\n",
        "plt.xlabel('Age Group')\n",
        "plt.ylabel('Average TT4 Blood Test Measurement')\n",
        "plt.title('Scatter Plot of Average TT4 Blood Test Measurement by Age Group')\n",
        "plt.show()\n",
        "\n",
        "\n",
        "\"\"\"df['avg_value'] = df[['T4U']].mean(axis = 1)\n",
        "\n",
        "TSH_df = df[['age_group', 'T4U']]\n",
        "\n",
        "grouped_df = TSH_df.groupby('age_group')['T4U'].mean().reset_index()\n",
        "\n",
        "plt.bar(TSH_df['age_group'], TSH_df['T4U'])\n",
        "plt.xlabel('Age Group')\n",
        "plt.ylabel('Average T4U Blood Test Measurement')\n",
        "plt.title('Scatter Plot of Average T4U Blood Test Measurement by Age Group')\n",
        "plt.show()\"\"\"\n",
        "\n",
        "\n",
        "df['avg_value'] = df[['FTI']].mean(axis = 1)\n",
        "\n",
        "TSH_df = df[['age_group', 'FTI']]\n",
        "\n",
        "grouped_df = TSH_df.groupby('age_group')['FTI'].mean().reset_index()\n",
        "\n",
        "plt.bar(TSH_df['age_group'], TSH_df['FTI'])\n",
        "plt.xlabel('Age Group')\n",
        "plt.ylabel('Average FTI Blood Test Measurement')\n",
        "plt.title('Scatter Plot of Average FTI Blood Test Measurement by Age Group')\n",
        "plt.show()\n",
        "\n",
        "\n",
        "df['avg_value'] = df[['TBG']].mean(axis = 1)\n",
        "\n",
        "TSH_df = df[['age_group', 'TBG']]\n",
        "\n",
        "grouped_df = TSH_df.groupby('age_group')['TBG'].mean().reset_index()\n",
        "\n",
        "plt.bar(TSH_df['age_group'], TSH_df['TBG'])\n",
        "plt.xlabel('Age Group')\n",
        "plt.ylabel('Average TBG Blood Test Measurement')\n",
        "plt.title('Scatter Plot of Average TBG Blood Test Measurement by Age Group')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "-9LYY2gPT3xV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "fc6d86e8-d0d2-4cb2-9a91-467871941de9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.to_csv('/content/drive/MyDrive/506/Final Project/thyroid_preprocessed.csv', index = False)"
      ],
      "metadata": {
        "id": "i9pQCYdFUx4U"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}